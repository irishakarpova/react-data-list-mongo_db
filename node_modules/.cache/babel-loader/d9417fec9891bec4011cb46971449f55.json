{"ast":null,"code":"import _objectSpread from \"/Users/irisha/spa/react-data-list_20_09 copy/react-data-list/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { Record } from 'immutable';\nimport { ADD_ARTICLE, LOAD_ALL_ARTICLES, LOAD_ARTICLE } from '../constants';\nimport { arrToMap } from './utils';\nconst ArticleRecord = Record({\n  id: null,\n  title: null,\n  description: null,\n  location: null,\n  members: null,\n  years: null\n});\nconst ReducerRecord = Record({\n  entities: arrToMap([], ArticleRecord)\n});\nexport default ((articlesState = new ReducerRecord(), action) => {\n  const type = action.type,\n        payload = action.payload,\n        response = action.response;\n\n  switch (type) {\n    case ADD_ARTICLE:\n      return articlesState.setIn(['entities'], _objectSpread({}, payload.article));\n\n    case LOAD_ALL_ARTICLES:\n      return articlesState.set('entities', arrToMap(response, ArticleRecord));\n\n    case LOAD_ARTICLE:\n      return articlesState.set(['entities', payload.id], new ArticleRecord(response));\n\n    default:\n      return articlesState;\n  }\n});","map":{"version":3,"sources":["/Users/irisha/spa/react-data-list_20_09 copy/react-data-list/src/reducer/articles.js"],"names":["Record","ADD_ARTICLE","LOAD_ALL_ARTICLES","LOAD_ARTICLE","arrToMap","ArticleRecord","id","title","description","location","members","years","ReducerRecord","entities","articlesState","action","type","payload","response","setIn","article","set"],"mappings":";AAAA,SAASA,MAAT,QAAuB,WAAvB;AACA,SAASC,WAAT,EAAsBC,iBAAtB,EAAyCC,YAAzC,QAA6D,cAA7D;AACA,SAASC,QAAT,QAAyB,SAAzB;AAEA,MAAMC,aAAa,GAAGL,MAAM,CAAC;AAC5BM,EAAAA,EAAE,EAAE,IADwB;AAE5BC,EAAAA,KAAK,EAAE,IAFqB;AAG5BC,EAAAA,WAAW,EAAE,IAHe;AAI5BC,EAAAA,QAAQ,EAAE,IAJkB;AAK5BC,EAAAA,OAAO,EAAE,IALmB;AAM5BC,EAAAA,KAAK,EAAE;AANqB,CAAD,CAA5B;AAQA,MAAMC,aAAa,GAAGZ,MAAM,CAAC;AAC5Ba,EAAAA,QAAQ,EAAET,QAAQ,CAAC,EAAD,EAAKC,aAAL;AADU,CAAD,CAA5B;AAIA,gBAAe,CAACS,aAAa,GAAG,IAAIF,aAAJ,EAAjB,EAAsCG,MAAtC,KAAgD;AAAA,QAErDC,IAFqD,GAEzBD,MAFyB,CAErDC,IAFqD;AAAA,QAE/CC,OAF+C,GAEzBF,MAFyB,CAE/CE,OAF+C;AAAA,QAEtCC,QAFsC,GAEzBH,MAFyB,CAEtCG,QAFsC;;AAI7D,UAAQF,IAAR;AAED,SAAKf,WAAL;AACG,aAAOa,aAAa,CAACK,KAAd,CAAoB,CAAC,UAAD,CAApB,oBACHF,OAAO,CAACG,OADL,EAAP;;AAGH,SAAKlB,iBAAL;AACE,aAAOY,aAAa,CAACO,GAAd,CAAkB,UAAlB,EAA8BjB,QAAQ,CAACc,QAAD,EAAWb,aAAX,CAAtC,CAAP;;AAEF,SAAKF,YAAL;AACE,aAAOW,aAAa,CAACO,GAAd,CAAkB,CAAC,UAAD,EAAaJ,OAAO,CAACX,EAArB,CAAlB,EAA4C,IAAID,aAAJ,CAAkBa,QAAlB,CAA5C,CAAP;;AAEC;AACI,aAAOJ,aAAP;AAbN;AAgBD,CApBD","sourcesContent":["import { Record } from 'immutable'\nimport { ADD_ARTICLE, LOAD_ALL_ARTICLES, LOAD_ARTICLE } from '../constants'\nimport { arrToMap } from './utils'\n\nconst ArticleRecord = Record({\n\tid: null,\n\ttitle: null,\n\tdescription: null,\n\tlocation: null,\n\tmembers: null,\n\tyears: null\n})\nconst ReducerRecord = Record({\n\tentities: arrToMap([], ArticleRecord)\n})\n\nexport default (articlesState = new ReducerRecord(), action) =>{\n\n  const { type, payload, response } = action\n\n  switch (type){\n\n\tcase ADD_ARTICLE:\n\t\t  return articlesState.setIn(['entities'], {\n\t\t\t  ...payload.article })\n\n\tcase LOAD_ALL_ARTICLES:\n\t\t\treturn articlesState.set('entities', arrToMap(response, ArticleRecord))\n\n\tcase LOAD_ARTICLE :\n\t\t\treturn articlesState.set(['entities', payload.id], new ArticleRecord(response))\n\n    default:\n        return articlesState\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}