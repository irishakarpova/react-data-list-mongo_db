{"ast":null,"code":"var _jsxFileName = \"/Users/irisha/spa/spa-list/src/components/article-list.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Article from \"./article\";\nimport accordion from \"../decorators/accordion\";\nimport { filtratedArticlesSelector } from '../selectors';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nclass ArticleList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      articles: Array.from({\n        length: 5\n      })\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          articles = _this$props.articles,\n          openItemId = _this$props.openItemId,\n          toggleOpenItem = _this$props.toggleOpenItem;\n    return React.createElement(InfiniteScroll, {\n      dataLength: this.state.articles.length,\n      hasMore: true,\n      loader: React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Loading...\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"article-list article-list-bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, articles.map(article => React.createElement(\"li\", {\n      className: \"article-list-li\",\n      key: article.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Article, {\n      article: article,\n      isOpen: openItemId === article.id,\n      toggleOpen: toggleOpenItem(article.id),\n      cssColor: openItemId === article.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default connect(state => {\n  return {\n    articles: filtratedArticlesSelector(state)\n  };\n})(accordion(ArticleList));","map":{"version":3,"sources":["/Users/irisha/spa/spa-list/src/components/article-list.js"],"names":["React","Component","connect","Article","accordion","filtratedArticlesSelector","InfiniteScroll","ArticleList","state","articles","Array","from","length","render","props","openItemId","toggleOpenItem","map","article","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAAQC,yBAAR,QAAwC,cAAxC;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AAGA,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAEhCO,KAFgC,GAExB;AACNC,MAAAA,QAAQ,EAAEC,KAAK,CAACC,IAAN,CAAW;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAX;AADJ,KAFwB;AAAA;;AAQlCC,EAAAA,MAAM,GAAE;AAAA,wBACyC,KAAKC,KAD9C;AAAA,UACCL,QADD,eACCA,QADD;AAAA,UACWM,UADX,eACWA,UADX;AAAA,UACuBC,cADvB,eACuBA,cADvB;AAEN,WACE,oBAAC,cAAD;AACE,MAAA,UAAU,EAAE,KAAKR,KAAL,CAAWC,QAAX,CAAoBG,MADlC;AAGE,MAAA,OAAO,EAAE,IAHX;AAIE,MAAA,MAAM,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAI,MAAA,SAAS,EAAC,8BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIH,QAAQ,CAACQ,GAAT,CAAaC,OAAO,IAChB;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAgC,MAAA,GAAG,EAAEA,OAAO,CAACC,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AACE,MAAA,OAAO,EAAED,OADX;AAEE,MAAA,MAAM,EAAIH,UAAU,KAAKG,OAAO,CAACC,EAFnC;AAGE,MAAA,UAAU,EAAIH,cAAc,CAACE,OAAO,CAACC,EAAT,CAH9B;AAIE,MAAA,QAAQ,EAAGJ,UAAU,KAAKG,OAAO,CAACC,EAJpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADJ,CAFJ,CANF,CADF;AAuBD;;AAjCiC;;AAqCpC,eAAejB,OAAO,CAAEM,KAAD,IAAW;AAEhC,SAAO;AAACC,IAAAA,QAAQ,EAAEJ,yBAAyB,CAACG,KAAD;AAApC,GAAP;AAED,CAJqB,CAAP,CAIZJ,SAAS,CAACG,WAAD,CAJG,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport Article from \"./article\"\nimport accordion from \"../decorators/accordion\"\nimport {filtratedArticlesSelector} from '../selectors'\nimport InfiniteScroll from 'react-infinite-scroll-component'\n\n\nclass ArticleList extends Component {\n\n    state = {\n      articles: Array.from({ length: 5 })\n    };\n\n\n\n  render(){\n    const {articles, openItemId, toggleOpenItem} = this.props\n    return(\n      <InfiniteScroll\n        dataLength={this.state.articles.length}\n\n        hasMore={true}\n        loader={<h4>Loading...</h4>}\n      >\n        <ul className=\"article-list article-list-bg\">\n          {\n            articles.map(article =>\n                <li className=\"article-list-li\" key={article.id}>\n                  <Article\n                    article={article}\n                    isOpen = {openItemId === article.id}\n                    toggleOpen = {toggleOpenItem(article.id)}\n                    cssColor= {openItemId === article.id}\n                  />\n                </li>\n              )\n            }\n        </ul>\n      </InfiniteScroll>\n    )\n  }\n\n}\n\nexport default connect((state) => {\n\n  return {articles: filtratedArticlesSelector(state)}\n\n})(accordion(ArticleList))\n"]},"metadata":{},"sourceType":"module"}