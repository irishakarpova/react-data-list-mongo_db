{"ast":null,"code":"var _jsxFileName = \"/Users/irisha/spa/spa-list/src/components/article-list.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Article from \"./article\";\nimport accordion from \"../decorators/accordion\";\nimport { filtratedArticlesSelector } from '../selectors';\nimport { infinityRange } from \"\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nclass ArticleList extends Component {\n  render() {\n    return React.createElement(\"ul\", {\n      className: \"article-list article-list-bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, this.articleItems);\n  }\n\n  get articleItems() {\n    const _this$props = this.props,\n          articles = _this$props.articles,\n          openItemId = _this$props.openItemId,\n          toggleOpenItem = _this$props.toggleOpenItem,\n          infinity = _this$props.infinity;\n    return articles.map(article => React.createElement(\"li\", {\n      className: \"article-list-li\",\n      key: article.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Article, {\n      article: article,\n      isOpen: openItemId === article.id,\n      toggleOpen: toggleOpenItem(article.id),\n      cssColor: openItemId === article.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default connect(state => {\n  return {\n    articles: filtratedArticlesSelector(state),\n    infinity: infinityRange\n  };\n})(accordion(ArticleList));","map":{"version":3,"sources":["/Users/irisha/spa/spa-list/src/components/article-list.js"],"names":["React","Component","connect","Article","accordion","filtratedArticlesSelector","infinityRange","InfiniteScroll","ArticleList","render","articleItems","props","articles","openItemId","toggleOpenItem","infinity","map","article","id","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAAQC,yBAAR,QAAwC,cAAxC;AACA,SAAQC,aAAR,QAA4B,EAA5B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AAEA,MAAMC,WAAN,SAA0BP,SAA1B,CAAoC;AAElCQ,EAAAA,MAAM,GAAE;AACN,WACI;AAAI,MAAA,SAAS,EAAC,8BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,YADR,CADJ;AAKD;;AAID,MAAIA,YAAJ,GAAkB;AAAA,wBACyC,KAAKC,KAD9C;AAAA,UACTC,QADS,eACTA,QADS;AAAA,UACCC,UADD,eACCA,UADD;AAAA,UACaC,cADb,eACaA,cADb;AAAA,UAC6BC,QAD7B,eAC6BA,QAD7B;AAKd,WAAOH,QAAQ,CAACI,GAAT,CAAaC,OAAO,IACzB;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAgC,MAAA,GAAG,EAAEA,OAAO,CAACC,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AACE,MAAA,OAAO,EAAED,OADX;AAEE,MAAA,MAAM,EAAIJ,UAAU,KAAKI,OAAO,CAACC,EAFnC;AAGE,MAAA,UAAU,EAAIJ,cAAc,CAACG,OAAO,CAACC,EAAT,CAH9B;AAIE,MAAA,QAAQ,EAAGL,UAAU,KAAKI,OAAO,CAACC,EAJpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADK,CAAP;AAYH;;AA7BiC;;AAgCpC,eAAehB,OAAO,CAAEiB,KAAD,IAAW;AAEhC,SAAO;AAACP,IAAAA,QAAQ,EAAEP,yBAAyB,CAACc,KAAD,CAApC;AACCJ,IAAAA,QAAQ,EAAET;AADX,GAAP;AAID,CANqB,CAAP,CAMZF,SAAS,CAACI,WAAD,CANG,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport Article from \"./article\"\nimport accordion from \"../decorators/accordion\"\nimport {filtratedArticlesSelector} from '../selectors'\nimport {infinityRange} from \"\"\nimport InfiniteScroll from \"react-infinite-scroll-component\"\n\nclass ArticleList extends Component {\n\n  render(){\n    return(\n        <ul className=\"article-list article-list-bg\">\n          {this.articleItems}\n        </ul>\n    )\n  }\n\n\n\n  get articleItems(){\n    const {articles, openItemId, toggleOpenItem, infinity} = this.props\n\n\n\n      return articles.map(article =>\n        <li className=\"article-list-li\" key={article.id}>\n          <Article\n            article={article}\n            isOpen = {openItemId === article.id}\n            toggleOpen = {toggleOpenItem(article.id)}\n            cssColor= {openItemId === article.id}\n          />\n        </li>\n      )\n\n\n  }\n}\n\nexport default connect((state) => {\n\n  return {articles: filtratedArticlesSelector(state),\n          infinity: infinityRange\n  }\n\n})(accordion(ArticleList))\n"]},"metadata":{},"sourceType":"module"}