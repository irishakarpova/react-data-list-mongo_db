{"ast":null,"code":"var _jsxFileName = \"/Users/irisha/spa/spa-list/src/components/infinity.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport accordion from \"../decorators/accordion\";\nimport { filtratedArticlesSelector } from '../selectors';\nimport InfiniteScroll from 'react-infinite-scroller';\n\nclass Scroll extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showItems: 30\n    };\n\n    this.loadFunc = () => {\n      this.setState({\n        showItems: this.state.showItems > this.props.articles ? this.state.showItems : this.state.showItems + 10\n      });\n    };\n  }\n\n  render() {\n    const getItems = this.props.articles.slice(0, this.state.showItems).map((article, key) => {\n      return React.createElement(\"li\", {\n        key: article.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, article.title);\n    });\n    console.log(getItems);\n    return React.createElement(InfiniteScroll, {\n      pageStart: 0,\n      loadMore: this.loadFunc,\n      hasMore: true || false,\n      loader: React.createElement(\"div\", {\n        className: \"loader\",\n        key: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Loading ...\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, getItems));\n  }\n\n}\n\nexport default connect(state => {\n  return {\n    articles: filtratedArticlesSelector(state)\n  };\n})(accordion(Scroll));","map":{"version":3,"sources":["/Users/irisha/spa/spa-list/src/components/infinity.js"],"names":["React","Component","connect","accordion","filtratedArticlesSelector","InfiniteScroll","Scroll","state","showItems","loadFunc","setState","props","articles","render","getItems","slice","map","article","key","id","title","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAAQC,yBAAR,QAAwC,cAAxC;AACA,OAAOC,cAAP,MAA2B,yBAA3B;;AAEA,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BM,KAD6B,GACrB;AACNC,MAAAA,SAAS,EAAE;AADL,KADqB;;AAAA,SAK7BC,QAL6B,GAKlB,MAAM;AACb,WAAKC,QAAL,CAAc;AACZF,QAAAA,SAAS,EACT,KAAKD,KAAL,CAAWC,SAAX,GAAuB,KAAKG,KAAL,CAAWC,QAAlC,GACA,KAAKL,KAAL,CAAWC,SADX,GACuB,KAAKD,KAAL,CAAWC,SAAX,GAAuB;AAHlC,OAAd;AAKH,KAX4B;AAAA;;AAc7BK,EAAAA,MAAM,GAAG;AAEP,UAAMC,QAAQ,GAAG,KAAKH,KAAL,CAAWC,QAAX,CAAoBG,KAApB,CAA0B,CAA1B,EAA4B,KAAKR,KAAL,CAAWC,SAAvC,EAAkDQ,GAAlD,CAAsD,CAACC,OAAD,EAAUC,GAAV,KAAiB;AACtF,aACE;AAAK,QAAA,GAAG,EAAED,OAAO,CAACE,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,OAAO,CAACG,KADX,CADF;AAIC,KALc,CAAjB;AAOEC,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AAEF,WACE,oBAAC,cAAD;AACE,MAAA,SAAS,EAAE,CADb;AAEE,MAAA,QAAQ,EAAE,KAAKL,QAFjB;AAGE,MAAA,OAAO,EAAE,QAAQ,KAHnB;AAIE,MAAA,MAAM,EAAE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAwB,QAAA,GAAG,EAAE,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGK,QADH,CANA,CADF;AAYD;;AArC4B;;AAwC/B,eAAeZ,OAAO,CAAEK,KAAD,IAAW;AAEhC,SAAO;AAACK,IAAAA,QAAQ,EAAER,yBAAyB,CAACG,KAAD;AAApC,GAAP;AAID,CANqB,CAAP,CAMZJ,SAAS,CAACG,MAAD,CANG,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport accordion from \"../decorators/accordion\"\nimport {filtratedArticlesSelector} from '../selectors'\nimport InfiniteScroll from 'react-infinite-scroller'\n\nclass Scroll extends Component {\n  state = {\n    showItems: 30\n  };\n\n  loadFunc = () => {\n      this.setState({\n        showItems:\n        this.state.showItems > this.props.articles ?\n        this.state.showItems : this.state.showItems + 10\n      })\n  }\n  \n\n  render() {\n\n    const getItems = this.props.articles.slice(0,this.state.showItems).map((article, key) =>{\n      return (\n        <li  key={article.id}>\n          {article.title}\n        </li>)\n      })\n\n      console.log(getItems)\n\n    return (\n      <InfiniteScroll\n        pageStart={0}\n        loadMore={this.loadFunc}\n        hasMore={true || false}\n        loader={<div className=\"loader\" key={0}>Loading ...</div>}\n      >\n      <div>\n        {getItems}\n      </div>\n      </InfiniteScroll>\n    )\n  }\n}\n\nexport default connect((state) => {\n\n  return {articles: filtratedArticlesSelector(state),\n\n  }\n\n})(accordion(Scroll))\n"]},"metadata":{},"sourceType":"module"}