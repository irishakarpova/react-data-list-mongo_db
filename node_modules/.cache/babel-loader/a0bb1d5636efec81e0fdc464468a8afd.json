{"ast":null,"code":"import _objectSpread from \"/Users/irisha/spa/spa-list/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/irisha/spa/spa-list/src/components/select.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport { connect } from 'react-redux';\nimport changeSelection from '../ac';\nimport PropTypes from 'prop-types';\n\nclass SelectFilter extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChange = (selected, articles) => {\n      if (selected > 1) return this.props.changeSelection(selected);\n    };\n  }\n\n  get options() {\n    return this.props.articles.map(article => ({\n      label: article.title,\n      value: article.id\n    }));\n  }\n\n  render() {\n    const placeholder = \"Search...\";\n    const styles = {\n      control: styles => _objectSpread({}, styles, {\n        backgroundColor: 'white',\n        borderRadius: '0',\n        border: '1px solid black',\n        ':hover': {\n          border: '1px solid black'\n        },\n        boxShadow: '0'\n      }),\n      multiValueLabel: () => ({\n        color: 'white',\n        backgroundColor: 'black',\n        fontSize: '12px',\n        fontFamily: 'Roboto Mono',\n        padding: '5px'\n      }),\n      multiValueRemove: () => ({\n        display: 'none'\n      }),\n      option: () => ({\n        color: 'black',\n        borderRadius: '0',\n        backgroundColor: '#e3cc91',\n        fontSize: '12px',\n        fontFamily: 'Roboto Mono',\n        padding: '10px 10px',\n        ':hover': {\n          backgroundColor: 'white'\n        }\n      }),\n      input: styles => ({\n        fontSize: '12px',\n        fontFamily: 'Roboto Mono'\n      }),\n      noOptionsMessage: styles => ({\n        fontSize: '12px',\n        fontFamily: 'Roboto Mono',\n        textAlign: \"center\"\n      }),\n      menuList: styles => _objectSpread({}, styles, {\n        borderRadius: 0,\n        padding: 0\n      }),\n      menu: styles => _objectSpread({}, styles, {\n        border: '1px solid black',\n        borderRadius: 0\n      }),\n      placeholder: styles => _objectSpread({}, styles, {\n        fontSize: '12px',\n        fontFamily: 'Roboto Mono',\n        color: 'black'\n      }),\n      indicatorSeparator: styles => _objectSpread({}, styles, {\n        display: 'none'\n      }),\n      dropdownIndicator: styles => _objectSpread({}, styles, {\n        color: 'black',\n        ':hover': {\n          color: 'black'\n        }\n      })\n    };\n    return React.createElement(\"div\", {\n      className: \"container-fluid Bg-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container p-0 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row p-0 pb-3 justify-content-md-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-10 col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Select, {\n      options: this.options,\n      value: this.props.selected,\n      onChange: this.handleChange,\n      styles: styles,\n      placeholder: placeholder,\n      isMulti: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nSelectFilter.propTypes = {\n  articles: PropTypes.array.isRequired\n};\nexport default connect(state => ({\n  selected: state.filters.selected,\n  articles: state.articles\n}), {\n  changeSelection\n})(SelectFilter);","map":{"version":3,"sources":["/Users/irisha/spa/spa-list/src/components/select.js"],"names":["React","Component","Select","connect","changeSelection","PropTypes","SelectFilter","handleChange","selected","articles","props","options","map","article","label","title","value","id","render","placeholder","styles","control","backgroundColor","borderRadius","border","boxShadow","multiValueLabel","color","fontSize","fontFamily","padding","multiValueRemove","display","option","input","noOptionsMessage","textAlign","menuList","menu","indicatorSeparator","dropdownIndicator","propTypes","array","isRequired","state","filters"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Select from 'react-select'\nimport {connect} from 'react-redux'\nimport changeSelection from '../ac'\nimport PropTypes from 'prop-types';\n\n\nclass SelectFilter extends Component{\n\n\n  static propTypes = {\n    articles: PropTypes.array.isRequired\n  }\n\n  handleChange = (selected, articles) => {\n    if (selected >1)return this.props.changeSelection(selected)\n  }\n\n  get options(){\n    return this.props.articles.map((article) =>({\n      label: article.title,\n      value: article.id,\n    }))\n  }\n\n  render(){\n  const placeholder = \"Search...\"\n\n  const styles = {\n  control: styles => ({ ...styles,\n      backgroundColor: 'white',\n      borderRadius: '0',\n      border:'1px solid black',\n      ':hover': {border:'1px solid black'},\n      boxShadow:'0',\n     }),\n\n  multiValueLabel: () => ({\n    color: 'white',\n    backgroundColor: 'black',\n    fontSize:'12px',\n    fontFamily:'Roboto Mono',\n    padding:'5px'\n  }),\n  multiValueRemove: () => ({\n    display: 'none'\n  }),\n\n  option: () => ({\n    color: 'black',\n    borderRadius: '0',\n    backgroundColor: '#e3cc91',\n    fontSize:'12px',\n    fontFamily:'Roboto Mono',\n    padding:'10px 10px',\n    ':hover': {backgroundColor:'white'},\n  }),\n  input: styles => ({\n    fontSize:'12px',\n    fontFamily:'Roboto Mono',\n   }),\n   noOptionsMessage: styles => ({\n     fontSize:'12px',\n     fontFamily:'Roboto Mono',\n     textAlign:\"center\"\n    }),\n    menuList: styles => ({...styles,\n      borderRadius: 0,\n      padding: 0,\n     }),\n    menu: styles => ({...styles,\n      border:'1px solid black',\n      borderRadius: 0,\n     }),\n    placeholder: styles => ({...styles,\n      fontSize:'12px',\n      fontFamily:'Roboto Mono',\n      color:'black'\n     }),\n    indicatorSeparator: styles => ({...styles,\n       display:'none'\n      }),\n\n    dropdownIndicator: styles => ({...styles,\n        color:'black',\n        ':hover': {color:'black'},\n      }),\n};\n\n    return(\n      <div className=\"container-fluid Bg-dark\">\n        <div className=\"container p-0 \">\n        <div class=\"row p-0 pb-3 justify-content-md-center\">\n          <div className=\"col-md-10 col-12\">\n              <Select options={this.options}\n                      value={this.props.selected}\n                      onChange={this.handleChange}\n                      styles={styles}\n                      placeholder={placeholder}\n                      isMulti\n\n              />\n            </div>\n            </div>\n        </div>\n      </div>\n    )\n  }\n\n}\nexport default connect(\n  (state) =>({\n    selected: state.filters.selected,\n    articles: state.articles\n  }),\n  { changeSelection }\n )(SelectFilter)\n"]},"metadata":{},"sourceType":"module"}