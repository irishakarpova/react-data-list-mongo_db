{"ast":null,"code":"var _jsxFileName = \"/Users/irisha/spa/spa-list/src/components/infinity.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport accordion from \"../decorators/accordion\";\nimport { filtratedArticlesSelector } from '../selectors';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nclass Scroll extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //  items: Array.from([{ length: 10 }),\n      showItems: 20\n    };\n\n    this.fetchMoreData = () => {\n      setTimeout(() => {\n        this.setState({\n          showItems: this.state.showItems < this.props.articles ? this.state.showItems : this.state.showItems + 1\n        });\n      }, 1500);\n    };\n  }\n\n  render() {\n    const getItems = this.props.articles.slice(0, this.state.showItems).map((article, key) => {\n      return React.createElement(\"li\", {\n        key: article.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, article.title);\n    });\n    console.log(getItems);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(InfiniteScroll, {\n      dataLength: this.state.showItems.length,\n      next: this.fetchMoreData,\n      hasMore: true,\n      loader: React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Loading...\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, getItems));\n  }\n\n}\n\nexport default connect(state => {\n  return {\n    articles: filtratedArticlesSelector(state)\n  };\n})(accordion(Scroll));","map":{"version":3,"sources":["/Users/irisha/spa/spa-list/src/components/infinity.js"],"names":["React","Component","connect","accordion","filtratedArticlesSelector","InfiniteScroll","Scroll","state","showItems","fetchMoreData","setTimeout","setState","props","articles","render","getItems","slice","map","article","key","id","title","console","log","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAAQC,yBAAR,QAAwC,cAAxC;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AAGA,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BM,KAD6B,GACrB;AACR;AACEC,MAAAA,SAAS,EAAE;AAFL,KADqB;;AAAA,SAM7BC,aAN6B,GAMb,MAAM;AACpBC,MAAAA,UAAU,CAAC,MAAM;AACf,aAAKC,QAAL,CAAc;AACZH,UAAAA,SAAS,EAAE,KAAKD,KAAL,CAAWC,SAAX,GAAuB,KAAKI,KAAL,CAAWC,QAAlC,GACV,KAAKN,KAAL,CAAWC,SADD,GACc,KAAKD,KAAL,CAAWC,SAAX,GAAuB;AAFpC,SAAd;AAID,OALS,EAKP,IALO,CAAV;AAMD,KAb4B;AAAA;;AAgB7BM,EAAAA,MAAM,GAAG;AAEP,UAAMC,QAAQ,GAAG,KAAKH,KAAL,CAAWC,QAAX,CAAoBG,KAApB,CAA0B,CAA1B,EAA4B,KAAKT,KAAL,CAAWC,SAAvC,EAAkDS,GAAlD,CAAsD,CAACC,OAAD,EAAUC,GAAV,KAAiB;AACtF,aACE;AAAK,QAAA,GAAG,EAAED,OAAO,CAACE,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,OAAO,CAACG,KADX,CADF;AAIC,KALc,CAAjB;AAOEC,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AAEF,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,cAAD;AACE,MAAA,UAAU,EAAE,KAAKR,KAAL,CAAWC,SAAX,CAAqBgB,MADnC;AAEE,MAAA,IAAI,EAAE,KAAKf,aAFb;AAGE,MAAA,OAAO,EAAE,IAHX;AAIE,MAAA,MAAM,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGM,QANH,CAFF,CADF;AAaD;;AAxC4B;;AA2C/B,eAAeb,OAAO,CAAEK,KAAD,IAAW;AAEhC,SAAO;AAACM,IAAAA,QAAQ,EAAET,yBAAyB,CAACG,KAAD;AAApC,GAAP;AAID,CANqB,CAAP,CAMZJ,SAAS,CAACG,MAAD,CANG,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport accordion from \"../decorators/accordion\"\nimport {filtratedArticlesSelector} from '../selectors'\nimport InfiniteScroll from \"react-infinite-scroll-component\"\n\n\nclass Scroll extends Component {\n  state = {\n  //  items: Array.from([{ length: 10 }),\n    showItems: 20\n  };\n\n  fetchMoreData = () => {\n    setTimeout(() => {\n      this.setState({\n        showItems: this.state.showItems < this.props.articles ?\n         this.state.showItems  : this.state.showItems + 1\n      });\n    }, 1500);\n  }\n\n\n  render() {\n\n    const getItems = this.props.articles.slice(0,this.state.showItems).map((article, key) =>{\n      return (\n        <li  key={article.id}>\n          {article.title}\n        </li>)\n      })\n\n      console.log(getItems)\n\n    return (\n      <div>\n\n        <InfiniteScroll\n          dataLength={this.state.showItems.length}\n          next={this.fetchMoreData}\n          hasMore={true}\n          loader={<h4>Loading...</h4>}\n        >\n          {getItems}\n        </InfiniteScroll>\n      </div>\n    );\n  }\n}\n\nexport default connect((state) => {\n\n  return {articles: filtratedArticlesSelector(state),\n\n  }\n\n})(accordion(Scroll))\n"]},"metadata":{},"sourceType":"module"}