{"ast":null,"code":"var _jsxFileName = \"/Users/irisha/spa/spa-list/src/components/article-list.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Article from \"./article\";\nimport accordion from \"../decorators/accordion\";\n\nclass ArticleList extends Component {\n  render() {\n    return React.createElement(\"ul\", {\n      className: \"article-list article-list-bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, this.articleItems);\n  }\n\n  get articleItems() {\n    const _this$props = this.props,\n          articles = _this$props.articles,\n          openItemId = _this$props.openItemId,\n          toggleOpenItem = _this$props.toggleOpenItem;\n    return articles.map(article => React.createElement(\"li\", {\n      className: \"article-list-li\",\n      key: article.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Article, {\n      article: article,\n      isOpen: openItemId === article.id,\n      toggleOpen: toggleOpenItem(article.id),\n      cssColor: openItemId === article.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default connect(state => {\n  const selected = state.filters.selected;\n\n  if (selected.length > 0) {\n    const filtratedArticles = state.articles.filter(article => {\n      return !selected.length || selected.find(selected => selected.value === article.id);\n    });\n    return {\n      articles: filtratedArticles\n    };\n  } else {}\n})(accordion(ArticleList));","map":{"version":3,"sources":["/Users/irisha/spa/spa-list/src/components/article-list.js"],"names":["React","Component","connect","Article","accordion","ArticleList","render","articleItems","props","articles","openItemId","toggleOpenItem","map","article","id","state","selected","filters","length","filtratedArticles","filter","find","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAElCK,EAAAA,MAAM,GAAE;AACN,WACE;AAAI,MAAA,SAAS,EAAC,8BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,YADR,CADF;AAKD;;AAED,MAAIA,YAAJ,GAAkB;AAAA,wBAC+B,KAAKC,KADpC;AAAA,UACTC,QADS,eACTA,QADS;AAAA,UACCC,UADD,eACCA,UADD;AAAA,UACaC,cADb,eACaA,cADb;AAGhB,WAAOF,QAAQ,CAACG,GAAT,CAAaC,OAAO,IACzB;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAgC,MAAA,GAAG,EAAEA,OAAO,CAACC,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAED,OAAlB;AACE,MAAA,MAAM,EAAIH,UAAU,KAAKG,OAAO,CAACC,EADnC;AAEE,MAAA,UAAU,EAAIH,cAAc,CAACE,OAAO,CAACC,EAAT,CAF9B;AAGE,MAAA,QAAQ,EAAGJ,UAAU,KAAKG,OAAO,CAACC,EAHpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADK,CAAP;AASD;;AAtBiC;;AAwBpC,eAAeZ,OAAO,CAAGa,KAAD,IAAW;AAAA,QAC1BC,QAD0B,GACdD,KAAK,CAACE,OADQ,CAC1BD,QAD0B;;AAGnC,MAAIA,QAAQ,CAACE,MAAT,GAAgB,CAApB,EAAsB;AAClB,UAAMC,iBAAiB,GAAGJ,KAAK,CAACN,QAAN,CAAeW,MAAf,CAAuBP,OAAD,IAAY;AAC1D,aAAO,CAACG,QAAQ,CAACE,MAAV,IAAoBF,QAAQ,CAACK,IAAT,CAAcL,QAAQ,IAAIA,QAAQ,CAACM,KAAT,KAAmBT,OAAO,CAACC,EAArD,CAA3B;AACD,KAFyB,CAA1B;AAGA,WAAO;AAACL,MAAAA,QAAQ,EAAEU;AAAX,KAAP;AACH,GALD,MAKM,CAEL;AAKA,CAfqB,CAAP,CAeZf,SAAS,CAACC,WAAD,CAfG,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport Article from \"./article\"\nimport accordion from \"../decorators/accordion\"\n\nclass ArticleList extends Component {\n\n  render(){\n    return(\n      <ul className=\"article-list article-list-bg\">\n        {this.articleItems}\n      </ul>\n    )\n  }\n\n  get articleItems(){\n    const {articles, openItemId, toggleOpenItem} = this.props\n\n    return articles.map(article =>\n      <li className=\"article-list-li\" key={article.id}>\n        <Article article={article}\n          isOpen = {openItemId === article.id}\n          toggleOpen = {toggleOpenItem(article.id)}\n          cssColor= {openItemId === article.id}\n        />\n      </li>\n    )\n  }\n}\nexport default connect ((state) => {\n  const {selected} = state.filters\n\nif (selected.length>0){\n    const filtratedArticles = state.articles.filter((article) =>{\n      return(!selected.length || selected.find(selected => selected.value === article.id))\n    })\n    return {articles: filtratedArticles }\n} else{\n  \n}\n\n\n\n\n})(accordion(ArticleList))\n"]},"metadata":{},"sourceType":"module"}