{"ast":null,"code":"import _objectSpread from \"/Users/irisha/spa/spa-list/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/irisha/spa/spa-list/src/components/select.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport { connect } from 'react-redux';\nimport changeSelection from '../ac';\nimport { articleListSelector, selectionSelector } from '../selectors';\nimport PropTypes from 'prop-types';\n\nclass SelectFilter extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChange = (selected, articles) => {\n      return this.props.changeSelection(selected);\n    };\n  }\n\n  get options() {\n    return this.props.articles.map(article => ({\n      label: article.title,\n      value: article.id\n    }));\n  }\n\n  render() {\n    const placeholder = \"Search...\";\n    const styles = {\n      control: styles => _objectSpread({}, styles, {\n        backgroundColor: 'white',\n        borderRadius: '0',\n        border: '1px solid black',\n        ':hover': {\n          border: '1px solid black'\n        },\n        boxShadow: '0'\n      }),\n      multiValueLabel: () => ({\n        color: 'white',\n        backgroundColor: 'black',\n        fontSize: '12px',\n        fontFamily: 'Roboto Mono',\n        padding: '5px'\n      }),\n      multiValueRemove: () => ({\n        display: 'none'\n      }),\n      option: () => ({\n        color: 'black',\n        borderRadius: '0',\n        backgroundColor: '#fec85b',\n        fontSize: '12px',\n        fontFamily: 'Roboto Mono',\n        padding: '10px 10px',\n        ':hover': {\n          backgroundColor: 'white',\n          borderLeft: '5px solid #fec85b',\n          borderRight: '5px solid #fec85b',\n          padding: '10px 5px'\n        }\n      }),\n      input: styles => ({\n        fontSize: '12px',\n        fontFamily: 'Roboto Mono'\n      }),\n      noOptionsMessage: styles => ({\n        fontSize: '12px',\n        fontFamily: 'Roboto Mono',\n        textAlign: \"center\"\n      }),\n      menuList: styles => _objectSpread({}, styles, {\n        borderRadius: 0,\n        padding: 0\n      }),\n      menu: styles => _objectSpread({}, styles, {\n        borderBottom: '1px solid black',\n        borderRadius: 0\n      }),\n      placeholder: styles => _objectSpread({}, styles, {\n        fontSize: '12px',\n        fontFamily: 'Roboto Mono',\n        color: 'black'\n      }),\n      indicatorSeparator: styles => _objectSpread({}, styles, {\n        display: 'none'\n      }),\n      dropdownIndicator: styles => _objectSpread({}, styles, {\n        color: 'black',\n        ':hover': {\n          color: 'black'\n        }\n      })\n    };\n    return React.createElement(\"div\", {\n      className: \"container-fluid Bg-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container p-0 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row p-0 pb-3 justify-content-md-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-10 col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Select, {\n      options: this.options,\n      value: this.props.selected,\n      onChange: this.handleChange,\n      styles: styles,\n      placeholder: placeholder,\n      isMulti: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nSelectFilter.propTypes = {\n  articles: PropTypes.array.isRequired\n};\nexport default connect(state => ({\n  selected: selectionSelector(state),\n  articles: articleListSelector(state)\n}), {\n  changeSelection\n})(SelectFilter);","map":{"version":3,"sources":["/Users/irisha/spa/spa-list/src/components/select.js"],"names":["React","Component","Select","connect","changeSelection","articleListSelector","selectionSelector","PropTypes","SelectFilter","handleChange","selected","articles","props","options","map","article","label","title","value","id","render","placeholder","styles","control","backgroundColor","borderRadius","border","boxShadow","multiValueLabel","color","fontSize","fontFamily","padding","multiValueRemove","display","option","borderLeft","borderRight","input","noOptionsMessage","textAlign","menuList","menu","borderBottom","indicatorSeparator","dropdownIndicator","propTypes","array","isRequired","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Select from 'react-select'\nimport {connect} from 'react-redux'\nimport changeSelection from '../ac'\nimport {articleListSelector, selectionSelector} from '../selectors'\nimport PropTypes from 'prop-types';\n\nclass SelectFilter extends Component{\n\n  static propTypes = {\n    articles: PropTypes.array.isRequired\n  }\n\n  get options(){\n    return this.props.articles.map((article) =>({\n      label: article.title,\n      value: article.id,\n    }))\n  }\n\n  handleChange = (selected, articles) => {\n    return this.props.changeSelection(selected)\n  }\n\n  render(){\n  const placeholder = \"Search...\"\n  const styles = {\n    control: styles => ({ ...styles,\n        backgroundColor: 'white',\n        borderRadius: '0',\n        border:'1px solid black',\n        ':hover': {border:'1px solid black'},\n        boxShadow:'0',\n       }),\n    multiValueLabel: () => ({\n      color: 'white',\n      backgroundColor: 'black',\n      fontSize:'12px',\n      fontFamily:'Roboto Mono',\n      padding:'5px'\n    }),\n    multiValueRemove: () => ({\n      display: 'none'\n    }),\n    option: () => ({\n      color: 'black',\n      borderRadius: '0',\n      backgroundColor: '#fec85b',\n      fontSize:'12px',\n      fontFamily:'Roboto Mono',\n      padding:'10px 10px',\n      ':hover':\n      {\n        backgroundColor:'white',\n        borderLeft:'5px solid #fec85b',\n        borderRight:'5px solid #fec85b',\n        padding:'10px 5px'\n      },\n    }),\n    input: styles => ({\n      fontSize:'12px',\n      fontFamily:'Roboto Mono',\n     }),\n    noOptionsMessage: styles => ({\n       fontSize:'12px',\n       fontFamily:'Roboto Mono',\n       textAlign:\"center\"\n      }),\n    menuList: styles => ({...styles,\n        borderRadius: 0,\n        padding: 0,\n       }),\n    menu: styles => ({...styles,\n        borderBottom:'1px solid black',\n        borderRadius: 0,\n       }),\n    placeholder: styles => ({...styles,\n        fontSize:'12px',\n        fontFamily:'Roboto Mono',\n        color:'black'\n       }),\n    indicatorSeparator: styles => ({...styles,\n         display:'none'\n        }),\n    dropdownIndicator: styles => ({...styles,\n          color:'black',\n          ':hover': {color:'black'},\n        }),\n  }\n\n    return(\n\n\t\t\t<div className=\"container-fluid Bg-dark\">\n\t\t\t\t<div className=\"container p-0 \">\n\t\t\t\t\t<div className=\"row p-0 pb-3 justify-content-md-center\">\n\t\t\t\t\t\t<div className=\"col-md-10 col-12\">\n\t\t\t\t      <Select options={this.options}\n\t\t\t\t              value={this.props.selected}\n\t\t\t\t              onChange={this.handleChange}\n\t\t\t\t              styles={styles}\n\t\t\t\t              placeholder={placeholder}\n\t\t\t\t              isMulti\n\t\t\t\t      />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t)\n  }\n}\n\nexport default connect(\n  (state) =>({\n    selected: selectionSelector(state),\n    articles: articleListSelector(state)\n  }),\n  { changeSelection }\n )(SelectFilter)\n"]},"metadata":{},"sourceType":"module"}