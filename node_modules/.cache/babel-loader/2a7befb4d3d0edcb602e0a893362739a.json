{"ast":null,"code":"var _jsxFileName = \"/Users/irisha/spa/spa-list/src/components/article-list.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Article from \"./article\";\nimport accordion from \"../decorators/accordion\";\n\nclass ArticleList extends Component {\n  render() {\n    return React.createElement(\"ul\", {\n      className: \"article-list article-list-bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, this.articleItems);\n  }\n\n  get articleItems() {\n    const _this$props = this.props,\n          articles = _this$props.articles,\n          openItemId = _this$props.openItemId,\n          toggleOpenItem = _this$props.toggleOpenItem;\n    return articles.map(article => React.createElement(\"li\", {\n      className: \"article-list-li\",\n      key: article.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Article, {\n      article: article,\n      isOpen: openItemId === article.id,\n      toggleOpen: toggleOpenItem(article.id),\n      cssColor: openItemId === article.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default connect(state => {\n  const _state$filters = state.filters,\n        selected = _state$filters.selected,\n        _state$filters$dateRa = _state$filters.dateRange,\n        from = _state$filters$dateRa.from,\n        to = _state$filters$dateRa.to;\n  const filtratedArticles = state.articles.filter(article => {\n    return (!selected.length || selected.find(selected => selected.value === article.id)) && (!from || !to || published > from && published < to);\n  });\n  return {\n    articles: filtratedArticles\n  };\n})(accordion(ArticleList));","map":{"version":3,"sources":["/Users/irisha/spa/spa-list/src/components/article-list.js"],"names":["React","Component","connect","Article","accordion","ArticleList","render","articleItems","props","articles","openItemId","toggleOpenItem","map","article","id","state","filters","selected","dateRange","from","to","filtratedArticles","filter","length","find","value","published"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAElCK,EAAAA,MAAM,GAAE;AACN,WACE;AAAI,MAAA,SAAS,EAAC,8BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,YADR,CADF;AAKD;;AAED,MAAIA,YAAJ,GAAkB;AAAA,wBAC+B,KAAKC,KADpC;AAAA,UACTC,QADS,eACTA,QADS;AAAA,UACCC,UADD,eACCA,UADD;AAAA,UACaC,cADb,eACaA,cADb;AAGhB,WAAOF,QAAQ,CAACG,GAAT,CAAaC,OAAO,IACzB;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAgC,MAAA,GAAG,EAAEA,OAAO,CAACC,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AACE,MAAA,OAAO,EAAED,OADX;AAEE,MAAA,MAAM,EAAIH,UAAU,KAAKG,OAAO,CAACC,EAFnC;AAGE,MAAA,UAAU,EAAIH,cAAc,CAACE,OAAO,CAACC,EAAT,CAH9B;AAIE,MAAA,QAAQ,EAAGJ,UAAU,KAAKG,OAAO,CAACC,EAJpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADK,CAAP;AAUD;;AAvBiC;;AAyBpC,eAAeZ,OAAO,CAAEa,KAAD,IAAW;AAAA,yBAI5BA,KAAK,CAACC,OAJsB;AAAA,QAE9BC,QAF8B,kBAE9BA,QAF8B;AAAA,+CAG9BC,SAH8B;AAAA,QAGlBC,IAHkB,yBAGlBA,IAHkB;AAAA,QAGZC,EAHY,yBAGZA,EAHY;AAKhC,QAAMC,iBAAiB,GAAIN,KAAK,CAACN,QAAN,CAAea,MAAf,CAAuBT,OAAD,IAAa;AAE7D,WACC,CAAC,CAACI,QAAQ,CAACM,MAAV,IAAoBN,QAAQ,CAACO,IAAT,CAAeP,QAAD,IAAcA,QAAQ,CAACQ,KAAT,KAAmBZ,OAAO,CAACC,EAAvD,CAArB,MACC,CAACK,IAAD,IAAS,CAACC,EAAV,IAAiBM,SAAS,GAAGP,IAAZ,IAAoBO,SAAS,GAAGN,EADlD,CADD;AAGG,GALuB,CAA3B;AAOA,SAAO;AAACX,IAAAA,QAAQ,EAAEY;AAAX,GAAP;AAED,CAdqB,CAAP,CAcZjB,SAAS,CAACC,WAAD,CAdG,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport Article from \"./article\"\nimport accordion from \"../decorators/accordion\"\n\nclass ArticleList extends Component {\n\n  render(){\n    return(\n      <ul className=\"article-list article-list-bg\">\n        {this.articleItems}\n      </ul>\n    )\n  }\n\n  get articleItems(){\n    const {articles, openItemId, toggleOpenItem} = this.props\n\n    return articles.map(article =>\n      <li className=\"article-list-li\" key={article.id}>\n        <Article\n          article={article}\n          isOpen = {openItemId === article.id}\n          toggleOpen = {toggleOpenItem(article.id)}\n          cssColor= {openItemId === article.id}\n        />\n      </li>\n    )\n  }\n}\nexport default connect((state) => {\n  const {\n    selected,\n    dateRange: {from, to}\n  } = state.filters\n  const filtratedArticles =  state.articles.filter((article) => {\n\n   return(\n    (!selected.length || selected.find((selected) => selected.value === article.id))&&\n    (!from || !to || (published > from && published < to))\n    )})\n\n  return {articles: filtratedArticles }\n\n})(accordion(ArticleList))\n"]},"metadata":{},"sourceType":"module"}