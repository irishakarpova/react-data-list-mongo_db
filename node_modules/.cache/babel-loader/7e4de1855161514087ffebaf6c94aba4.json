{"ast":null,"code":"var _jsxFileName = \"/Users/irisha/spa/spa-list/src/components/infinity.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport accordion from \"../decorators/accordion\";\nimport { filtratedArticlesSelector } from '../selectors';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nclass Scroll extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //  items: Array.from([{ length: 10 }),\n      //items:[],\n      showItems: 30\n    };\n  }\n\n  render() {\n    const getItems = this.props.articles.slice(0, this.state.showItems).map((article, key) => {\n      return React.createElement(\"li\", {\n        key: article.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, article.title);\n    });\n    console.log(getItems);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(InfiniteScroll, {\n      dataLength: this.props.articles,\n      next: this.fetchMoreData,\n      hasMore: true,\n      loader: React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Loading...\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, getItems, React.createElement(\"button\", {\n      onClick: this.handleShowMore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"MORE\")));\n  }\n\n}\n\nexport default connect(state => {\n  return {\n    articles: filtratedArticlesSelector(state)\n  };\n})(accordion(Scroll));","map":{"version":3,"sources":["/Users/irisha/spa/spa-list/src/components/infinity.js"],"names":["React","Component","connect","accordion","filtratedArticlesSelector","InfiniteScroll","Scroll","state","showItems","render","getItems","props","articles","slice","map","article","key","id","title","console","log","fetchMoreData","handleShowMore"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAAQC,yBAAR,QAAwC,cAAxC;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AAGA,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BM,KAD6B,GACrB;AACR;AACE;AACAC,MAAAA,SAAS,EAAE;AAHL,KADqB;AAAA;;AAQ7BC,EAAAA,MAAM,GAAG;AAGP,UAAMC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,KAApB,CAA0B,CAA1B,EAA4B,KAAKN,KAAL,CAAWC,SAAvC,EAAkDM,GAAlD,CAAsD,CAACC,OAAD,EAAUC,GAAV,KAAiB;AACtF,aACE;AAAK,QAAA,GAAG,EAAED,OAAO,CAACE,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,OAAO,CAACG,KADX,CADF;AAIC,KALc,CAAjB;AAOEC,IAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AAEF,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,cAAD;AACE,MAAA,UAAU,EAAE,KAAKC,KAAL,CAAWC,QADzB;AAEE,MAAA,IAAI,EAAE,KAAKS,aAFb;AAGE,MAAA,OAAO,EAAE,IAHX;AAIE,MAAA,MAAM,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGX,QAPH,EAQE;AAAQ,MAAA,OAAO,EAAE,KAAKY,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,CAFF,CADF;AAgBD;;AApC4B;;AAuC/B,eAAepB,OAAO,CAAEK,KAAD,IAAW;AAEhC,SAAO;AAACK,IAAAA,QAAQ,EAAER,yBAAyB,CAACG,KAAD;AAApC,GAAP;AAID,CANqB,CAAP,CAMZJ,SAAS,CAACG,MAAD,CANG,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport accordion from \"../decorators/accordion\"\nimport {filtratedArticlesSelector} from '../selectors'\nimport InfiniteScroll from \"react-infinite-scroll-component\"\n\n\nclass Scroll extends Component {\n  state = {\n  //  items: Array.from([{ length: 10 }),\n    //items:[],\n    showItems: 30\n  };\n\n\n  render() {\n\n\n    const getItems = this.props.articles.slice(0,this.state.showItems).map((article, key) =>{\n      return (\n        <li  key={article.id}>\n          {article.title}\n        </li>)\n      })\n\n      console.log(getItems)\n\n    return (\n      <div>\n\n        <InfiniteScroll\n          dataLength={this.props.articles}\n          next={this.fetchMoreData}\n          hasMore={true}\n          loader={<h4>Loading...</h4>}\n        >\n\n          {getItems}\n          <button onClick={this.handleShowMore}>MORE</button>\n\n        </InfiniteScroll>\n      </div>\n    )\n  }\n}\n\nexport default connect((state) => {\n\n  return {articles: filtratedArticlesSelector(state),\n\n  }\n\n})(accordion(Scroll))\n"]},"metadata":{},"sourceType":"module"}