{"ast":null,"code":"var _jsxFileName = \"/Users/irisha/spa/spa-list/src/components/infinity.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport accordion from \"../decorators/accordion\";\nimport { filtratedArticlesSelector } from '../selectors';\n\nclass Scroll extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showItems: 21\n    };\n\n    this.handleScroll = event => {\n      let element = event.target(element.scrollHeight - element.scrollTop === element.clientHeight) ? this.setState({\n        showItems: this.state.showItems\n      }) : this.setState({\n        showItems: this.state.showItems + 10\n      });\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  render() {\n    const getItems = this.props.articles.slice(0, this.state.showItems).map((article, key) => {\n      return React.createElement(\"li\", {\n        key: article.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, article.title);\n    });\n    console.log(getItems);\n    return React.createElement(\"div\", {\n      onScroll: this.handleScroll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, getItems);\n  }\n\n}\n\nexport default connect(state => {\n  return {\n    articles: filtratedArticlesSelector(state)\n  };\n})(accordion(Scroll));","map":{"version":3,"sources":["/Users/irisha/spa/spa-list/src/components/infinity.js"],"names":["React","Component","connect","accordion","filtratedArticlesSelector","Scroll","state","showItems","handleScroll","event","element","target","scrollHeight","scrollTop","clientHeight","setState","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","render","getItems","props","articles","slice","map","article","key","id","title","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAAQC,yBAAR,QAAwC,cAAxC;;AAGA,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BK,KAD6B,GACrB;AACNC,MAAAA,SAAS,EAAE;AADL,KADqB;;AAAA,SAK7BC,YAL6B,GAKbC,KAAD,IAAW;AACxB,UAAIC,OAAO,GAAGD,KAAK,CAACE,MAAN,CACbD,OAAO,CAACE,YAAR,GAAuBF,OAAO,CAACG,SAA/B,KAA6CH,OAAO,CAACI,YADxC,IACwD,KAAKC,QAAL,CAAc;AAAER,QAAAA,SAAS,EAAE,KAAKD,KAAL,CAAWC;AAAxB,OAAd,CADxD,GAEd,KAAKQ,QAAL,CAAc;AAAER,QAAAA,SAAS,EAAE,KAAKD,KAAL,CAAWC,SAAX,GAAuB;AAApC,OAAd,CAFA;AAGD,KAT4B;AAAA;;AAW7BS,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKV,YAAvC;AACD;;AACDW,EAAAA,oBAAoB,GAAG;AACrBF,IAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqC,KAAKZ,YAA1C;AACD;;AAIDa,EAAAA,MAAM,GAAG;AAEP,UAAMC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,KAApB,CAA0B,CAA1B,EAA4B,KAAKnB,KAAL,CAAWC,SAAvC,EAAkDmB,GAAlD,CAAsD,CAACC,OAAD,EAAUC,GAAV,KAAiB;AACtF,aACE;AAAK,QAAA,GAAG,EAAED,OAAO,CAACE,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,OAAO,CAACG,KADX,CADF;AAIC,KALc,CAAjB;AAOEC,IAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AAEF,WACE;AAAK,MAAA,QAAQ,EAAI,KAAKd,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGc,QADH,CADF;AAKD;;AApC4B;;AAuC/B,eAAepB,OAAO,CAAEI,KAAD,IAAW;AAEhC,SAAO;AAACkB,IAAAA,QAAQ,EAAEpB,yBAAyB,CAACE,KAAD;AAApC,GAAP;AAID,CANqB,CAAP,CAMZH,SAAS,CAACE,MAAD,CANG,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport accordion from \"../decorators/accordion\"\nimport {filtratedArticlesSelector} from '../selectors'\n\n\nclass Scroll extends Component {\n  state = {\n    showItems: 21\n  }\n\n  handleScroll = (event) => {\n    let element = event.target\n    (element.scrollHeight - element.scrollTop === element.clientHeight) ? this.setState({ showItems: this.state.showItems}) :\n    this.setState({ showItems: this.state.showItems + 10})\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n\n\n  render() {\n\n    const getItems = this.props.articles.slice(0,this.state.showItems).map((article, key) =>{\n      return (\n        <li  key={article.id}>\n          {article.title}\n        </li>)\n      })\n\n      console.log(getItems)\n\n    return (\n      <div onScroll = {this.handleScroll} >\n        {getItems}\n      </div>\n    )\n  }\n}\n\nexport default connect((state) => {\n\n  return {articles: filtratedArticlesSelector(state),\n\n  }\n\n})(accordion(Scroll))\n"]},"metadata":{},"sourceType":"module"}