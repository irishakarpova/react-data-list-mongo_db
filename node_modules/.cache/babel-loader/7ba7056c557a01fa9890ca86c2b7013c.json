{"ast":null,"code":"import _objectSpread from \"/Users/irisha/spa/spa-list/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/irisha/spa/spa-list/src/components/select.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport chroma from 'chroma-js';\nimport { connect } from 'react-redux';\nimport changeSelection from '../ac';\n\nclass SelectFilter extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChange = selected => {\n      this.props.changeSelection(selected);\n    };\n  }\n\n  get options() {\n    return this.props.articles.map(article => ({\n      label: article.title,\n      value: article.id,\n      color: 'red'\n    }));\n  }\n\n  render() {\n    const colourStyles = {\n      control: styles => _objectSpread({}, styles, {\n        backgroundColor: 'white'\n      }),\n      option: (styles, {\n        data,\n        isDisabled,\n        isFocused,\n        isSelected\n      }) => {\n        const color = chroma(data.color);\n        return _objectSpread({}, styles, {\n          backgroundColor: isDisabled ? null : isSelected ? data.color : isFocused ? color.alpha(0.1).css() : null,\n          color: isDisabled ? '#ccc' : isSelected ? chroma.contrast(color, 'white') > 2 ? 'white' : 'black' : data.color,\n          cursor: isDisabled ? 'not-allowed' : 'default',\n          ':active': _objectSpread({}, styles[':active'], {\n            backgroundColor: !isDisabled && (isSelected ? data.color : color.alpha(0.3).css())\n          })\n        });\n      },\n      multiValue: (styles, {\n        data\n      }) => {\n        const color = chroma(data.color);\n        return _objectSpread({}, styles, {\n          backgroundColor: color.alpha(0.1).css()\n        });\n      },\n      multiValueLabel: (styles, {\n        data\n      }) => _objectSpread({}, styles, {\n        color: data.color\n      }),\n      multiValueRemove: (styles, {\n        data\n      }) => _objectSpread({}, styles, {\n        color: data.color,\n        ':hover': {\n          backgroundColor: data.color,\n          color: 'white'\n        }\n      })\n    };\n    return React.createElement(\"div\", {\n      className: \"container-fluid Bg-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container p-0 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row p-0 pb-3 justify-content-md-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-10 col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Select, {\n      options: this.options,\n      value: this.props.selected,\n      onChange: this.handleChange,\n      styles: colourStyles,\n      isMulti: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default connect(state => ({\n  selected: state.filters.selected,\n  articles: state.articles\n}), {\n  changeSelection\n})(SelectFilter);","map":{"version":3,"sources":["/Users/irisha/spa/spa-list/src/components/select.js"],"names":["React","Component","Select","chroma","connect","changeSelection","SelectFilter","handleChange","selected","props","options","articles","map","article","label","title","value","id","color","render","colourStyles","control","styles","backgroundColor","option","data","isDisabled","isFocused","isSelected","alpha","css","contrast","cursor","multiValue","multiValueLabel","multiValueRemove","state","filters"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,eAAP,MAA4B,OAA5B;;AAGA,MAAMC,YAAN,SAA2BL,SAA3B,CAAoC;AAAA;AAAA;;AAAA,SAGlCM,YAHkC,GAGlBC,QAAD,IAAc;AAC3B,WAAKC,KAAL,CAAWJ,eAAX,CAA2BG,QAA3B;AACD,KALiC;AAAA;;AAOlC,MAAIE,OAAJ,GAAa;AACX,WAAO,KAAKD,KAAL,CAAWE,QAAX,CAAoBC,GAApB,CAAyBC,OAAD,KAAa;AAC1CC,MAAAA,KAAK,EAAED,OAAO,CAACE,KAD2B;AAE1CC,MAAAA,KAAK,EAAEH,OAAO,CAACI,EAF2B;AAG1CC,MAAAA,KAAK,EAAE;AAHmC,KAAb,CAAxB,CAAP;AAKD;;AAEDC,EAAAA,MAAM,GAAE;AAEN,UAAMC,YAAY,GAAG;AACvBC,MAAAA,OAAO,EAAEC,MAAM,sBAAUA,MAAV;AAAkBC,QAAAA,eAAe,EAAE;AAAnC,QADQ;AAEvBC,MAAAA,MAAM,EAAE,CAACF,MAAD,EAAS;AAAEG,QAAAA,IAAF;AAAQC,QAAAA,UAAR;AAAoBC,QAAAA,SAApB;AAA+BC,QAAAA;AAA/B,OAAT,KAAyD;AAC/D,cAAMV,KAAK,GAAGf,MAAM,CAACsB,IAAI,CAACP,KAAN,CAApB;AACA,iCACKI,MADL;AAEEC,UAAAA,eAAe,EAAEG,UAAU,GACvB,IADuB,GAEvBE,UAAU,GACVH,IAAI,CAACP,KADK,GAEVS,SAAS,GACTT,KAAK,CAACW,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,EADS,GAET,IARN;AASEZ,UAAAA,KAAK,EAAEQ,UAAU,GACb,MADa,GAEbE,UAAU,GACVzB,MAAM,CAAC4B,QAAP,CAAgBb,KAAhB,EAAuB,OAAvB,IAAkC,CAAlC,GACE,OADF,GAEE,OAHQ,GAIVO,IAAI,CAACP,KAfX;AAgBEc,UAAAA,MAAM,EAAEN,UAAU,GAAG,aAAH,GAAmB,SAhBvC;AAkBE,uCACKJ,MAAM,CAAC,SAAD,CADX;AAEEC,YAAAA,eAAe,EAAE,CAACG,UAAD,KAAgBE,UAAU,GAAGH,IAAI,CAACP,KAAR,GAAgBA,KAAK,CAACW,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,EAA1C;AAFnB;AAlBF;AAuBD,OA3BsB;AA4BvBG,MAAAA,UAAU,EAAE,CAACX,MAAD,EAAS;AAAEG,QAAAA;AAAF,OAAT,KAAsB;AAChC,cAAMP,KAAK,GAAGf,MAAM,CAACsB,IAAI,CAACP,KAAN,CAApB;AACA,iCACKI,MADL;AAEEC,UAAAA,eAAe,EAAEL,KAAK,CAACW,KAAN,CAAY,GAAZ,EAAiBC,GAAjB;AAFnB;AAID,OAlCsB;AAmCvBI,MAAAA,eAAe,EAAE,CAACZ,MAAD,EAAS;AAAEG,QAAAA;AAAF,OAAT,uBACZH,MADY;AAEfJ,QAAAA,KAAK,EAAEO,IAAI,CAACP;AAFG,QAnCM;AAuCvBiB,MAAAA,gBAAgB,EAAE,CAACb,MAAD,EAAS;AAAEG,QAAAA;AAAF,OAAT,uBACbH,MADa;AAEhBJ,QAAAA,KAAK,EAAEO,IAAI,CAACP,KAFI;AAGhB,kBAAU;AACRK,UAAAA,eAAe,EAAEE,IAAI,CAACP,KADd;AAERA,UAAAA,KAAK,EAAE;AAFC;AAHM;AAvCK,KAArB;AAiDA,WACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,KAAK,EAAC,wCAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKR,OAAtB;AACQ,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWD,QAD1B;AAEQ,MAAA,QAAQ,EAAE,KAAKD,YAFvB;AAGQ,MAAA,MAAM,EAAEa,YAHhB;AAIQ,MAAA,OAAO,MAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADF,CADA,CADF,CADF;AAgBD;;AAlFiC;;AAqFpC,eAAehB,OAAO,CACnBgC,KAAD,KAAW;AACT5B,EAAAA,QAAQ,EAAE4B,KAAK,CAACC,OAAN,CAAc7B,QADf;AAETG,EAAAA,QAAQ,EAAEyB,KAAK,CAACzB;AAFP,CAAX,CADoB,EAKpB;AAACN,EAAAA;AAAD,CALoB,CAAP,CAMZC,YANY,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport Select from 'react-select'\nimport chroma from 'chroma-js';\nimport {connect} from 'react-redux'\nimport changeSelection from '../ac'\n\n\nclass SelectFilter extends Component{\n\n\n  handleChange = (selected) => {\n    this.props.changeSelection(selected)\n  }\n\n  get options(){\n    return this.props.articles.map((article) =>({\n      label: article.title,\n      value: article.id,\n      color: 'red'\n    }))\n  }\n\n  render(){\n\n    const colourStyles = {\n  control: styles => ({ ...styles, backgroundColor: 'white' }),\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    const color = chroma(data.color);\n    return {\n      ...styles,\n      backgroundColor: isDisabled\n        ? null\n        : isSelected\n        ? data.color\n        : isFocused\n        ? color.alpha(0.1).css()\n        : null,\n      color: isDisabled\n        ? '#ccc'\n        : isSelected\n        ? chroma.contrast(color, 'white') > 2\n          ? 'white'\n          : 'black'\n        : data.color,\n      cursor: isDisabled ? 'not-allowed' : 'default',\n\n      ':active': {\n        ...styles[':active'],\n        backgroundColor: !isDisabled && (isSelected ? data.color : color.alpha(0.3).css()),\n      },\n    };\n  },\n  multiValue: (styles, { data }) => {\n    const color = chroma(data.color);\n    return {\n      ...styles,\n      backgroundColor: color.alpha(0.1).css(),\n    };\n  },\n  multiValueLabel: (styles, { data }) => ({\n    ...styles,\n    color: data.color,\n  }),\n  multiValueRemove: (styles, { data }) => ({\n    ...styles,\n    color: data.color,\n    ':hover': {\n      backgroundColor: data.color,\n      color: 'white',\n    },\n  }),\n};\n\n    return(\n      <div className=\"container-fluid Bg-dark\">\n        <div className=\"container p-0 \">\n        <div class=\"row p-0 pb-3 justify-content-md-center\">\n          <div className=\"col-md-10 col-12\">\n              <Select options={this.options}\n                      value={this.props.selected}\n                      onChange={this.handleChange}\n                      styles={colourStyles}\n                      isMulti\n              />\n            </div>\n            </div>\n        </div>\n      </div>\n    )\n  }\n\n}\nexport default connect(\n  (state) =>({\n    selected: state.filters.selected,\n    articles: state.articles\n  }),\n  {changeSelection}\n )(SelectFilter)\n"]},"metadata":{},"sourceType":"module"}