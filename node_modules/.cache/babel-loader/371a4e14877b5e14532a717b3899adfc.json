{"ast":null,"code":"var _jsxFileName = \"/Users/irisha/spa/spa-list/src/components/article-list.js\";\nimport React, { Component } from 'react';\nimport Article from './article';\nimport { connect } from 'react-redux';\nimport accordion from \"../decorators/accordion\";\nimport { filtratedArticlesSelector } from '../selectors';\n\nclass ArticleList extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, this.articleItems);\n  }\n\n  get articleItems() {\n    const _this$props = this.props,\n          articles = _this$props.articles,\n          openItemId = _this$props.openItemId,\n          toggleOpenItem = _this$props.toggleOpenItem;\n    const list = articles.map(article => React.createElement(\"li\", {\n      className: \"article-list-li\",\n      key: article.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Article, {\n      article: article,\n      isOpen: openItemId === article.id,\n      toggleOpen: toggleOpenItem(article.id),\n      cssColor: openItemId === article.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    })));\n    return React.createElement(\"ul\", {\n      className: \"article-list article-list-bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, list);\n  }\n\n}\n\nexport default connect(state => {\n  return {\n    articles: filtratedArticlesSelector(state)\n  };\n})(accordion(ArticleList));","map":{"version":3,"sources":["/Users/irisha/spa/spa-list/src/components/article-list.js"],"names":["React","Component","Article","connect","accordion","filtratedArticlesSelector","ArticleList","render","articleItems","props","articles","openItemId","toggleOpenItem","list","map","article","id","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAAQC,yBAAR,QAAwC,cAAxC;;AAGA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAElCM,EAAAA,MAAM,GAAE;AACN,WAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKC,YADV,CAFJ;AAMD;;AAED,MAAIA,YAAJ,GAAkB;AAAA,wBAC+B,KAAKC,KADpC;AAAA,UACTC,QADS,eACTA,QADS;AAAA,UACCC,UADD,eACCA,UADD;AAAA,UACaC,cADb,eACaA,cADb;AAEd,UAAMC,IAAI,GAAGH,QAAQ,CAACI,GAAT,CAAaC,OAAO,IAC/B;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAgC,MAAA,GAAG,EAAEA,OAAO,CAACC,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AACE,MAAA,OAAO,EAAED,OADX;AAEE,MAAA,MAAM,EAAIJ,UAAU,KAAKI,OAAO,CAACC,EAFnC;AAGE,MAAA,UAAU,EAAIJ,cAAc,CAACG,OAAO,CAACC,EAAT,CAH9B;AAIE,MAAA,QAAQ,EAAGL,UAAU,KAAKI,OAAO,CAACC,EAJpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADW,CAAb;AAUA,WAAO;AAAI,MAAA,SAAS,EAAC,8BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8CH,IAA9C,CAAP;AACH;;AAxBiC;;AA2BpC,eAAeV,OAAO,CAAEc,KAAD,IAAW;AAEhC,SAAO;AAACP,IAAAA,QAAQ,EAAEL,yBAAyB,CAACY,KAAD;AAApC,GAAP;AAID,CANqB,CAAP,CAMZb,SAAS,CAACE,WAAD,CANG,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport Article from './article'\nimport {connect} from 'react-redux'\nimport accordion from \"../decorators/accordion\"\nimport {filtratedArticlesSelector} from '../selectors'\n\n\nclass ArticleList extends Component {\n\n  render(){\n    return(\n      \n        <div>\n            {this.articleItems}\n        </div>\n    )\n  }\n\n  get articleItems(){\n    const {articles, openItemId, toggleOpenItem} = this.props\n      const list = articles.map(article =>\n        <li className=\"article-list-li\" key={article.id}>\n            <Article\n              article={article}\n              isOpen = {openItemId === article.id}\n              toggleOpen = {toggleOpenItem(article.id)}\n              cssColor= {openItemId === article.id}\n            />\n        </li>\n      )\n      return <ul className=\"article-list article-list-bg\">{list}</ul>\n  }\n}\n\nexport default connect((state) => {\n\n  return {articles: filtratedArticlesSelector(state),\n\n  }\n\n})(accordion(ArticleList))\n"]},"metadata":{},"sourceType":"module"}