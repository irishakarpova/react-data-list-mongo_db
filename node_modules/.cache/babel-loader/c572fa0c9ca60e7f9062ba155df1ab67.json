{"ast":null,"code":"import _slicedToArray from \"/Users/irisha/spa/spa-list/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/irisha/spa/spa-list/src/components/article-list.js\";\nimport React, { Component, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Article from \"./article\";\nimport accordion from \"../decorators/accordion\";\nimport { filtratedArticlesSelector } from '../selectors';\n\nclass ArticleList extends Component {\n  render() {\n    return React.createElement(\"ul\", {\n      className: \"article-list article-list-bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, this.articleItems);\n  }\n\n  get articleItems() {\n    const _this$props = this.props,\n          openItemId = _this$props.openItemId,\n          toggleOpenItem = _this$props.toggleOpenItem;\n\n    const _useState = useState(Array.from(Array(30).keys(), n => n + 1)),\n          _useState2 = _slicedToArray(_useState, 2),\n          articles = _useState2[0],\n          setListItems = _useState2[1];\n\n    return this.propsarticles.map(article => React.createElement(\"li\", {\n      className: \"article-list-li\",\n      key: article.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Article, {\n      article: article,\n      isOpen: openItemId === article.id,\n      toggleOpen: toggleOpenItem(article.id),\n      cssColor: openItemId === article.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default connect(state => {\n  return {\n    articles: filtratedArticlesSelector(state)\n  };\n})(accordion(ArticleList));","map":{"version":3,"sources":["/Users/irisha/spa/spa-list/src/components/article-list.js"],"names":["React","Component","useState","connect","Article","accordion","filtratedArticlesSelector","ArticleList","render","articleItems","props","openItemId","toggleOpenItem","Array","from","keys","n","articles","setListItems","propsarticles","map","article","id","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA4C,OAA5C;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAAQC,yBAAR,QAAwC,cAAxC;;AAEA,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAElCO,EAAAA,MAAM,GAAE;AACN,WACE;AAAI,MAAA,SAAS,EAAC,8BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,YADR,CADF;AAKD;;AAED,MAAIA,YAAJ,GAAkB;AAAA,wBACsB,KAAKC,KAD3B;AAAA,UACRC,UADQ,eACRA,UADQ;AAAA,UACIC,cADJ,eACIA,cADJ;;AAAA,sBAEiBV,QAAQ,CAACW,KAAK,CAACC,IAAN,CAAWD,KAAK,CAAC,EAAD,CAAL,CAAUE,IAAV,EAAX,EAA6BC,CAAC,IAAIA,CAAC,GAAG,CAAtC,CAAD,CAFzB;AAAA;AAAA,UAETC,QAFS;AAAA,UAECC,YAFD;;AAIhB,WAAO,KAAKC,aAAL,CAAmBC,GAAnB,CAAuBC,OAAO,IACnC;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAgC,MAAA,GAAG,EAAEA,OAAO,CAACC,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AACE,MAAA,OAAO,EAAED,OADX;AAEE,MAAA,MAAM,EAAIV,UAAU,KAAKU,OAAO,CAACC,EAFnC;AAGE,MAAA,UAAU,EAAIV,cAAc,CAACS,OAAO,CAACC,EAAT,CAH9B;AAIE,MAAA,QAAQ,EAAGX,UAAU,KAAKU,OAAO,CAACC,EAJpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADK,CAAP;AAUD;;AAxBiC;;AA4BpC,eAAenB,OAAO,CAAEoB,KAAD,IAAW;AAEhC,SAAO;AAACN,IAAAA,QAAQ,EAAEX,yBAAyB,CAACiB,KAAD;AAApC,GAAP;AAED,CAJqB,CAAP,CAIZlB,SAAS,CAACE,WAAD,CAJG,CAAf","sourcesContent":["import React, { Component, useState  } from 'react'\nimport {connect} from 'react-redux'\nimport Article from \"./article\"\nimport accordion from \"../decorators/accordion\"\nimport {filtratedArticlesSelector} from '../selectors'\n\nclass ArticleList extends Component {\n\n  render(){\n    return(\n      <ul className=\"article-list article-list-bg\">\n        {this.articleItems}\n      </ul>\n    )\n  }\n\n  get articleItems(){\n    const { openItemId, toggleOpenItem} = this.props\n    const [articles, setListItems] = useState(Array.from(Array(30).keys(), n => n + 1));\n\n    return this.propsarticles.map(article =>\n      <li className=\"article-list-li\" key={article.id}>\n        <Article\n          article={article}\n          isOpen = {openItemId === article.id}\n          toggleOpen = {toggleOpenItem(article.id)}\n          cssColor= {openItemId === article.id}\n        />\n      </li>\n    )\n  }\n}\n\n\nexport default connect((state) => {\n\n  return {articles: filtratedArticlesSelector(state)}\n\n})(accordion(ArticleList))\n"]},"metadata":{},"sourceType":"module"}