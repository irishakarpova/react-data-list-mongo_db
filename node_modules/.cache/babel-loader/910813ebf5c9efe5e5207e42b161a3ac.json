{"ast":null,"code":"var _jsxFileName = \"/Users/irisha/spa/spa-list/src/components/infinityList.js\";\nimport React, { Component } from 'react';\nimport Article from \"./article\";\nimport { connect } from 'react-redux';\nimport { filtratedArticlesSelector } from '../selectors';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nclass InfinityList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: Array.from({\n        length: 5\n      })\n    };\n  }\n\n  render() {\n    const articles = this.props.articles;\n    return React.createElement(InfiniteScroll, {\n      dataLength: this.state.items.length,\n      hasMore: true,\n      loader: React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Loading...\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"articles.map(article =>\", React.createElement(\"li\", {\n      className: \"article-list-li\",\n      key: article.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Article, {\n      article: article,\n      isOpen: openItemId === article.id,\n      toggleOpen: toggleOpenItem(article.id),\n      cssColor: openItemId === article.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default connect(state => {\n  return {\n    articles: filtratedArticlesSelector(state)\n  };\n})(InfinityList);","map":{"version":3,"sources":["/Users/irisha/spa/spa-list/src/components/infinityList.js"],"names":["React","Component","Article","connect","filtratedArticlesSelector","InfiniteScroll","InfinityList","state","items","Array","from","length","render","articles","props","article","id","openItemId","toggleOpenItem"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,yBAAR,QAAwC,cAAxC;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AAEA,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEnCM,KAFmC,GAE3B;AACNC,MAAAA,KAAK,EAAEC,KAAK,CAACC,IAAN,CAAW;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAX;AADD,KAF2B;AAAA;;AAMnCC,EAAAA,MAAM,GAAG;AAAA,UACAC,QADA,GACY,KAAKC,KADjB,CACAD,QADA;AAEP,WACA,oBAAC,cAAD;AACE,MAAA,UAAU,EAAE,KAAKN,KAAL,CAAWC,KAAX,CAAiBG,MAD/B;AAEE,MAAA,OAAO,EAAE,IAFX;AAGE,MAAA,MAAM,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAME;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAgC,MAAA,GAAG,EAAEI,OAAO,CAACC,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AACE,MAAA,OAAO,EAAED,OADX;AAEE,MAAA,MAAM,EAAIE,UAAU,KAAKF,OAAO,CAACC,EAFnC;AAGE,MAAA,UAAU,EAAIE,cAAc,CAACH,OAAO,CAACC,EAAT,CAH9B;AAIE,MAAA,QAAQ,EAAGC,UAAU,KAAKF,OAAO,CAACC,EAJpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CANF,CADA;AAqBD;;AA7BkC;;AA+BrC,eAAeb,OAAO,CAAEI,KAAD,IAAW;AAEhC,SAAO;AAACM,IAAAA,QAAQ,EAAET,yBAAyB,CAACG,KAAD;AAApC,GAAP;AAID,CANqB,CAAP,CAMXD,YANW,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport Article from \"./article\"\nimport {connect} from 'react-redux'\nimport {filtratedArticlesSelector} from '../selectors'\nimport InfiniteScroll from \"react-infinite-scroll-component\"\n\nclass InfinityList extends Component {\n\n  state = {\n    items: Array.from({ length: 5 })\n  }\n\n  render() {\n    const {articles} = this.props\n    return(\n    <InfiniteScroll\n      dataLength={this.state.items.length}\n      hasMore={true}\n      loader={<h4>Loading...</h4>}\n    >\n    articles.map(article =>\n      <li className=\"article-list-li\" key={article.id}>\n          <Article\n            article={article}\n            isOpen = {openItemId === article.id}\n            toggleOpen = {toggleOpenItem(article.id)}\n            cssColor= {openItemId === article.id}\n          />\n      </li>\n\n\n\n    </InfiniteScroll>\n  )\n\n  }\n}\nexport default connect((state) => {\n\n  return {articles: filtratedArticlesSelector(state),\n\n  }\n\n})((InfinityList))\n"]},"metadata":{},"sourceType":"module"}