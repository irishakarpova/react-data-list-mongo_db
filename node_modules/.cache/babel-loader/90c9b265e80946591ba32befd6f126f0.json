{"ast":null,"code":"var _jsxFileName = \"/Users/irisha/spa/spa-list/src/components/article-list.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Article from \"./article\";\nimport accordion from \"../decorators/accordion\";\nimport { filtratedArticlesSelector } from '../selectors';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nclass ArticleList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: Array.from({\n        length: 10\n      })\n    };\n  }\n\n  render() {\n    return React.createElement(\"ul\", {\n      className: \"article-list article-list-bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, this.articleItems);\n  }\n\n  get articleItems() {\n    const _this$props = this.props,\n          articles = _this$props.articles,\n          openItemId = _this$props.openItemId,\n          toggleOpenItem = _this$props.toggleOpenItem;\n    const allarticles = articles.map(article => React.createElement(\"li\", {\n      className: \"article-list-li\",\n      key: article.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Article, {\n      article: article,\n      isOpen: openItemId === article.id,\n      toggleOpen: toggleOpenItem(article.id),\n      cssColor: openItemId === article.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default connect(state => {\n  return {\n    articles: filtratedArticlesSelector(state)\n  };\n})(accordion(ArticleList));","map":{"version":3,"sources":["/Users/irisha/spa/spa-list/src/components/article-list.js"],"names":["React","Component","connect","Article","accordion","filtratedArticlesSelector","InfiniteScroll","ArticleList","state","items","Array","from","length","render","articleItems","props","articles","openItemId","toggleOpenItem","allarticles","map","article","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAAQC,yBAAR,QAAwC,cAAxC;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AAIA,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAElCO,KAFkC,GAE1B;AACRC,MAAAA,KAAK,EAAEC,KAAK,CAACC,IAAN,CAAW;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAX;AADC,KAF0B;AAAA;;AAMlCC,EAAAA,MAAM,GAAE;AACN,WACI;AAAI,MAAA,SAAS,EAAC,8BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,YADR,CADJ;AAKD;;AAED,MAAIA,YAAJ,GAAkB;AAAA,wBAC+B,KAAKC,KADpC;AAAA,UACTC,QADS,eACTA,QADS;AAAA,UACCC,UADD,eACCA,UADD;AAAA,UACaC,cADb,eACaA,cADb;AAIhB,UAAMC,WAAW,GAAGH,QAAQ,CAACI,GAAT,CAAaC,OAAO,IACtC;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAgC,MAAA,GAAG,EAAEA,OAAO,CAACC,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AACE,MAAA,OAAO,EAAED,OADX;AAEE,MAAA,MAAM,EAAIJ,UAAU,KAAKI,OAAO,CAACC,EAFnC;AAGE,MAAA,UAAU,EAAIJ,cAAc,CAACG,OAAO,CAACC,EAAT,CAH9B;AAIE,MAAA,QAAQ,EAAGL,UAAU,KAAKI,OAAO,CAACC,EAJpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADkB,CAApB;AAUD;;AA5BiC;;AA+BpC,eAAepB,OAAO,CAAEM,KAAD,IAAW;AAEhC,SAAO;AAACQ,IAAAA,QAAQ,EAAEX,yBAAyB,CAACG,KAAD;AAApC,GAAP;AAED,CAJqB,CAAP,CAIZJ,SAAS,CAACG,WAAD,CAJG,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport Article from \"./article\"\nimport accordion from \"../decorators/accordion\"\nimport {filtratedArticlesSelector} from '../selectors'\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\n\n\nclass ArticleList extends Component {\n\n  state = {\n  items: Array.from({ length: 10 })\n};\n\n  render(){\n    return(\n        <ul className=\"article-list article-list-bg\">\n          {this.articleItems}\n        </ul>\n    )\n  }\n\n  get articleItems(){\n    const {articles, openItemId, toggleOpenItem} = this.props\n\n\n    const allarticles = articles.map(article =>\n      <li className=\"article-list-li\" key={article.id}>\n        <Article\n          article={article}\n          isOpen = {openItemId === article.id}\n          toggleOpen = {toggleOpenItem(article.id)}\n          cssColor= {openItemId === article.id}\n        />\n      </li>\n    )\n  }\n}\n\nexport default connect((state) => {\n\n  return {articles: filtratedArticlesSelector(state)}\n\n})(accordion(ArticleList))\n"]},"metadata":{},"sourceType":"module"}