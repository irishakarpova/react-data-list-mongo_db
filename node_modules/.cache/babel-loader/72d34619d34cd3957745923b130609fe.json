{"ast":null,"code":"import _objectSpread from \"/Users/irisha/spa/react-data-list_17_09/react-data-list/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { Record } from 'immutable';\nimport { ADD_ARTICLE, LOAD_ALL_ARTICLES } from '../constants';\nimport { arrToMap } from './utils';\nconst ArticleRecord = Record({\n  id: null,\n  title: null,\n  text: null,\n  location: null,\n  members: null\n});\nconst ReducerRecord = Record({\n  articles: arrToMap([], ArticleRecord),\n  loading: false,\n  loaded: false,\n  error: null\n});\nexport default ((articleState = new ReducerRecord(), action) => {\n  const type = action.type,\n        payload = action.payload,\n        randomId = action.randomId,\n        response = action.response;\n\n  switch (type) {\n    case ADD_ARTICLE:\n      return articleState.set(randomId, _objectSpread({}, payload.article, {\n        id: randomId\n      }));\n\n    case LOAD_ALL_ARTICLES:\n      return arrToMap(response, ArticleRecord);\n\n    default:\n      return articleState;\n  }\n});","map":{"version":3,"sources":["/Users/irisha/spa/react-data-list_17_09/react-data-list/src/reducer/articles.js"],"names":["Record","ADD_ARTICLE","LOAD_ALL_ARTICLES","arrToMap","ArticleRecord","id","title","text","location","members","ReducerRecord","articles","loading","loaded","error","articleState","action","type","payload","randomId","response","set","article"],"mappings":";AAAA,SAASA,MAAT,QAAuB,WAAvB;AACA,SAASC,WAAT,EAAsBC,iBAAtB,QAA+C,cAA/C;AACA,SAASC,QAAT,QAAyB,SAAzB;AAEA,MAAMC,aAAa,GAAGJ,MAAM,CAAC;AAC5BK,EAAAA,EAAE,EAAE,IADwB;AAE5BC,EAAAA,KAAK,EAAE,IAFqB;AAG5BC,EAAAA,IAAI,EAAE,IAHsB;AAI5BC,EAAAA,QAAQ,EAAE,IAJkB;AAK5BC,EAAAA,OAAO,EAAE;AALmB,CAAD,CAA5B;AAQA,MAAMC,aAAa,GAAGV,MAAM,CAAC;AAC5BW,EAAAA,QAAQ,EAAER,QAAQ,CAAC,EAAD,EAAKC,aAAL,CADU;AAE5BQ,EAAAA,OAAO,EAAE,KAFmB;AAG5BC,EAAAA,MAAM,EAAE,KAHoB;AAI5BC,EAAAA,KAAK,EAAE;AAJqB,CAAD,CAA5B;AAOA,gBAAe,CAACC,YAAY,GAAG,IAAIL,aAAJ,EAAhB,EAAqCM,MAArC,KAA+C;AAAA,QAEpDC,IAFoD,GAEdD,MAFc,CAEpDC,IAFoD;AAAA,QAE9CC,OAF8C,GAEdF,MAFc,CAE9CE,OAF8C;AAAA,QAErCC,QAFqC,GAEdH,MAFc,CAErCG,QAFqC;AAAA,QAE3BC,QAF2B,GAEdJ,MAFc,CAE3BI,QAF2B;;AAI5D,UAAQH,IAAR;AAED,SAAKhB,WAAL;AACG,aAAOc,YAAY,CAACM,GAAb,CAAiBF,QAAjB,oBACHD,OAAO,CAACI,OADL;AACcjB,QAAAA,EAAE,EAACc;AADjB,SAAP;;AAGH,SAAKjB,iBAAL;AACE,aAAOC,QAAQ,CAACiB,QAAD,EAAWhB,aAAX,CAAf;;AAEC;AACI,aAAOW,YAAP;AAVN;AAaD,CAjBD","sourcesContent":["import { Record } from 'immutable'\nimport { ADD_ARTICLE, LOAD_ALL_ARTICLES } from '../constants'\nimport { arrToMap } from './utils'\n\nconst ArticleRecord = Record({\n\tid: null,\n\ttitle: null,\n\ttext: null,\n\tlocation: null,\n\tmembers: null\n})\n\nconst ReducerRecord = Record({\n\tarticles: arrToMap([], ArticleRecord),\n\tloading: false,\n\tloaded: false,\n\terror: null\n})\n\nexport default (articleState = new ReducerRecord  , action) =>{\n\n  const { type, payload, randomId, response } = action\n\n  switch (type){\n\n\tcase ADD_ARTICLE:\n\t\t  return articleState.set(randomId, {\n\t\t\t  ...payload.article, id:randomId })\n\n\tcase LOAD_ALL_ARTICLES:\n\t\t\treturn arrToMap(response, ArticleRecord)\n\n    default:\n        return articleState\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}