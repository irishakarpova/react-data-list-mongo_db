{"ast":null,"code":"var _jsxFileName = \"/Users/irisha/spa/spa-list/src/components/addArticle.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addArticle } from '../ac';\nimport styles from '../App.module.css';\nimport globalStyles from 'bootstrap/dist/css/bootstrap.module.css';\nimport classLister from 'css-module-class-lister';\nconst classes = classLister(styles, globalStyles);\n\nclass AddArticle extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      members: '',\n      text: '',\n      submitValue: 'Submit your article',\n      errorTitle: '',\n      errorMembers: '',\n      errorText: ''\n    };\n\n    this.handleSubmit = ev => {\n      ev.preventDefault();\n      const errorMessage = React.createElement(\"p\", {\n        className: classes[\"error_messages\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"this field can't be blank\");\n      const errorMessageDescr = React.createElement(\"p\", {\n        className: classes[\"error_messages\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"this field must be at least 50 characters minimum\");\n      let error = {\n        errorTitle: null,\n        errorMembers: null,\n        errorText: null\n      };\n      let hasError = false;\n\n      if (!this.isValidField('title')) {\n        error.errorTitle = errorMessage;\n        hasError = true;\n      }\n\n      if (!this.isValidField('members')) {\n        error.errorMembers = errorMessage;\n        hasError = true;\n      }\n\n      if (!this.isValidField('text')) {\n        error.errorText = errorMessageDescr;\n        hasError = true;\n      }\n\n      this.setState(error);\n\n      if (hasError) {\n        return;\n      }\n\n      this.props.addArticle(this.state);\n      return this.setState({\n        title: '',\n        members: '',\n        text: '',\n        submitValue: 'The article is submitted'\n      });\n    };\n\n    this.isValidField = type => this.state[type].length >= limits[type].min;\n\n    this.handleChange = type => ev => {\n      const value = ev.target.value;\n      if (value.length > limits[type].max) return;\n      this.setState({\n        [type]: value\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          title = _this$state.title,\n          members = _this$state.members,\n          text = _this$state.text;\n    return React.createElement(\"div\", {\n      className: \"container-fluid p-0 m-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes[\"form-container col-md-10 col-12\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: classes[\"new-article-title\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Add new article\"), React.createElement(\"form\", {\n      className: classes[\"add-article-form d-flex flex-column\"],\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: classes[\"form-field\"],\n      placeholder: \"Name of group\",\n      value: title,\n      onChange: this.handleChange('title'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: classes[\"form-field\"],\n      placeholder: \"Members\",\n      value: members,\n      onChange: this.handleChange('members'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: classes[\"form-field-description\"],\n      placeholder: \"Description\",\n      value: text,\n      onChange: this.handleChange('text'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"SUBMIT YOUR ARTICLE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nconst limits = {\n  title: {\n    min: 1,\n    max: 20\n  },\n  members: {\n    min: 1,\n    max: 100\n  },\n  text: {\n    min: 5,\n    max: 350\n  }\n};\nexport default connect(null, (dispatch, ownProps) => ({\n  addArticle: article => dispatch(addArticle(article, ownProps.articleId))\n}))(AddArticle);","map":{"version":3,"sources":["/Users/irisha/spa/spa-list/src/components/addArticle.js"],"names":["React","Component","connect","addArticle","styles","globalStyles","classLister","classes","AddArticle","state","title","members","text","submitValue","errorTitle","errorMembers","errorText","handleSubmit","ev","preventDefault","errorMessage","errorMessageDescr","error","hasError","isValidField","setState","props","type","length","limits","min","handleChange","value","target","max","render","dispatch","ownProps","article","articleId"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {addArticle} from '../ac'\nimport styles from '../App.module.css'\nimport globalStyles from 'bootstrap/dist/css/bootstrap.module.css'\nimport classLister from 'css-module-class-lister'\n\nconst classes = classLister(styles, globalStyles)\n\nclass AddArticle extends Component{\n\n\tstate={\n\t\ttitle: '',\n\t\tmembers:'',\n\t\ttext: '',\n\t\tsubmitValue: 'Submit your article',\n\t\terrorTitle: '',\n\t\terrorMembers: '',\n\t\terrorText: ''\n\t}\n\nrender(){\n\n\tconst {title, members, text} = this.state\n\n\treturn(\n\t\t<div className=\"container-fluid p-0 m-0\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"row d-flex justify-content-center\">\n\t\t\t\t\t<div className={classes[\"form-container col-md-10 col-12\"]}>\n\t\t\t\t\t\t<h3 className={classes[\"new-article-title\"]}>Add new article</h3>\n\t\t\t\t\t\t<form className={classes[\"add-article-form d-flex flex-column\"]}\n\t\t\t\t\t\t\t\tonSubmit={this.handleSubmit}>\n\t\t\t\t\t\t\t<input className={classes[\"form-field\"]}\n\t\t\t\t\t\t\t\tplaceholder=\"Name of group\"\n\t\t\t\t\t\t\t\tvalue={title}\n\t\t\t\t\t\t\t\tonChange={this.handleChange('title')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<input className={classes[\"form-field\"]}\n\t\t\t\t\t\t\t\tplaceholder=\"Members\"\n\t\t\t\t\t\t\t\tvalue={members}\n\t\t\t\t\t\t\t\tonChange={this.handleChange('members')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<input className={classes[\"form-field-description\"]}\n\t\t\t\t\t\t\t\tplaceholder=\"Description\"\n\t\t\t\t\t\t\t\tvalue={text}\n\t\t\t\t\t\t\t\tonChange={this.handleChange('text')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<input type='submit' value='SUBMIT YOUR ARTICLE'/>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\n\thandleSubmit = (ev) => {\n\n\t ev.preventDefault()\n\n\t const errorMessage = <p className={classes[\"error_messages\"]}>this field can't be blank</p>\n\n\t const errorMessageDescr = <p className={classes[\"error_messages\"]}>this field must be at least 50 characters minimum</p>\n\n\t let error = {\n\t \t errorTitle: null,\n\t   errorMembers: null,\n\t   errorText: null\n\t }\n\n\t let hasError = false;\n\n\t\tif (!this.isValidField('title')){\n\t\t\terror.errorTitle = errorMessage\n\t\t\thasError = true;\n\t\t}\n\n\t\tif (!this.isValidField('members')){\n\t\t  error.errorMembers = errorMessage\n\t\t\thasError = true;\n\t\t}\n\n\t \tif (!this.isValidField('text')){\n\t\t\terror.errorText = errorMessageDescr\n\t\t\thasError = true;\n\t\t}\n\n\t \tthis.setState(error)\n\t\tif (hasError) {\n\t\t   return\n\t\t}\n\n\t\tthis.props.addArticle(this.state)\n\n\t\treturn(\n\t\t\tthis.setState({\n\t\t\t\ttitle: '',\n\t\t\t\tmembers:'',\n\t\t\t\ttext: '',\n\t\t\t\tsubmitValue: 'The article is submitted',\n\t\t\t})\n\t\t)\n\t}\n\n\tisValidField = (type) => this.state[type].length >= limits[type].min\n\n\thandleChange = (type) => (ev) =>{\n\t\tconst {value} = ev.target\n\t\tif(value.length>limits[type].max) return\n\t\t\tthis.setState({\n\t\t\t\t[type]: value\n\t\t\t})\n\t}\n}\n\nconst limits =  {\n\ttitle: { min:1, max:20},\n\tmembers: { min:1, max:100},\n\ttext: { min:5, max:350}\n}\n\nexport default connect(null, (dispatch, ownProps) => ({\n\taddArticle: (article) => dispatch(addArticle(article, ownProps.articleId))\n}))(AddArticle)\n"]},"metadata":{},"sourceType":"module"}