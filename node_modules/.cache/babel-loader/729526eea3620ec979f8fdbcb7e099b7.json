{"ast":null,"code":"import _objectSpread from \"/Users/irisha/spa/react-data-list_17_09/react-data-list/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { Record } from 'immutable';\nimport { ADD_ARTICLE, LOAD_ALL_ARTICLES, LOAD_ARTICLE } from '../constants';\nimport { arrToMap } from './utils';\nconst ArticleRecord = Record({\n  id: null,\n  title: null,\n  description: null,\n  location: null,\n  members: null\n});\nexport default ((articles = arrToMap([], ArticleRecord), action) => {\n  const type = action.type,\n        payload = action.payload,\n        randomId = action.randomId,\n        response = action.response;\n\n  switch (type) {\n    case ADD_ARTICLE:\n      return articles.set(randomId, _objectSpread({}, payload.article, {\n        id: randomId\n      }));\n\n    case LOAD_ALL_ARTICLES:\n      return arrToMap(response, ArticleRecord);\n\n    case LOAD_ARTICLE:\n      return articles.set([articles, payload.id], new ArticleRecord(response));\n\n    default:\n      return articles;\n  }\n});","map":{"version":3,"sources":["/Users/irisha/spa/react-data-list_17_09/react-data-list/src/reducer/articles.js"],"names":["Record","ADD_ARTICLE","LOAD_ALL_ARTICLES","LOAD_ARTICLE","arrToMap","ArticleRecord","id","title","description","location","members","articles","action","type","payload","randomId","response","set","article"],"mappings":";AAAA,SAASA,MAAT,QAAuB,WAAvB;AACA,SAASC,WAAT,EAAsBC,iBAAtB,EAAyCC,YAAzC,QAA6D,cAA7D;AACA,SAASC,QAAT,QAAyB,SAAzB;AAEA,MAAMC,aAAa,GAAGL,MAAM,CAAC;AAC5BM,EAAAA,EAAE,EAAE,IADwB;AAE5BC,EAAAA,KAAK,EAAE,IAFqB;AAG5BC,EAAAA,WAAW,EAAE,IAHe;AAI5BC,EAAAA,QAAQ,EAAE,IAJkB;AAK5BC,EAAAA,OAAO,EAAE;AALmB,CAAD,CAA5B;AAQA,gBAAe,CAACC,QAAQ,GAAGP,QAAQ,CAAC,EAAD,EAAKC,aAAL,CAApB,EAAyCO,MAAzC,KAAmD;AAAA,QAExDC,IAFwD,GAElBD,MAFkB,CAExDC,IAFwD;AAAA,QAElDC,OAFkD,GAElBF,MAFkB,CAElDE,OAFkD;AAAA,QAEzCC,QAFyC,GAElBH,MAFkB,CAEzCG,QAFyC;AAAA,QAE/BC,QAF+B,GAElBJ,MAFkB,CAE/BI,QAF+B;;AAIhE,UAAQH,IAAR;AAED,SAAKZ,WAAL;AACG,aAAOU,QAAQ,CAACM,GAAT,CAAaF,QAAb,oBACHD,OAAO,CAACI,OADL;AACcZ,QAAAA,EAAE,EAACS;AADjB,SAAP;;AAGH,SAAKb,iBAAL;AACE,aAAOE,QAAQ,CAACY,QAAD,EAAWX,aAAX,CAAf;;AAED,SAAKF,YAAL;AACC,aAAOQ,QAAQ,CAACM,GAAT,CAAa,CAACN,QAAD,EAAWG,OAAO,CAACR,EAAnB,CAAb,EAAqC,IAAID,aAAJ,CAAkBW,QAAlB,CAArC,CAAP;;AAGC;AACI,aAAOL,QAAP;AAdN;AAiBD,CArBD","sourcesContent":["import { Record } from 'immutable'\nimport { ADD_ARTICLE, LOAD_ALL_ARTICLES, LOAD_ARTICLE } from '../constants'\nimport { arrToMap } from './utils'\n\nconst ArticleRecord = Record({\n\tid: null,\n\ttitle: null,\n\tdescription: null,\n\tlocation: null,\n\tmembers: null\n})\n\nexport default (articles = arrToMap([], ArticleRecord), action) =>{\n\n  const { type, payload, randomId, response } = action\n\n  switch (type){\n\n\tcase ADD_ARTICLE:\n\t\t  return articles.set(randomId, {\n\t\t\t  ...payload.article, id:randomId })\n\n\tcase LOAD_ALL_ARTICLES:\n\t\t\treturn arrToMap(response, ArticleRecord)\n\n  case LOAD_ARTICLE:\n\t\t\treturn articles.set([articles, payload.id], new ArticleRecord(response))\n\n\n    default:\n        return articles\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}